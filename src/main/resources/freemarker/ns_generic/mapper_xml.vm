<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="${pkgNameMapper}.${mapperName}">

	<resultMap id="poMap" type="${pkgNamePo}.${poName}">
		#foreach ($field in $fields)
		<result column="${field.name}" property="${field.javaFieldName}"/>
		#end
	</resultMap>

	<!-- 表所有参数-->
	<sql id="tableCol">
		#foreach ($field in $fields)
		`${field.name}`#if($foreach.hasNext),#end
		#end
	</sql>

	<!-- 实体所有参数-->
	<sql id="poVal">
		#foreach ($field in $fields)
		#{val.${field.javaFieldName}}#if($foreach.hasNext),#end
		#end
	</sql>

	<sql id="where">
		<where>
			#foreach ($field in $fields)
			<if test="val.${field.javaFieldName}!=null">and ${field.name} = #{val.${field.javaFieldName}}}</if>
			#end
		</where>
	</sql>

	<insert id="insert" parameterType="${pkgNamePo}.${poName}">
		<if test="val!=null">
			INSERT INTO ${tableName}(<include refid="tableCol" />)
			VALUES(<include refid="poVal"/>)
		</if>
	</insert>

	<insert id="insertOrUpdate" parameterType="${pkgNamePo}.${poName}">
		<if test="val!=null">
			INSERT INTO ${tableName}(<include refid="tableCol" />)
			VALUES(<include refid="poVal"/>)
			ON DUPLICATE KEY UPDATE
			#foreach ($field in $fieldsByTable)
			${field.name} = values(${field.name})#if($foreach.hasNext),#end
			#end
		</if>
	</insert>

	<insert id="insertList" parameterType="list">
		<if test="val!=null">
			INSERT INTO ${tableName}(<include refid="tableCol" />)
			VALUES
			<foreach collection="data" item="val" index="index" separator=",">
				(<include refid="poVal"/>)
			</foreach>
		</if>
	</insert>

	#foreach ($field in $fields)
	#if(${field.primary})
	<delete id="removeBy${field.javaGetterName}">
		DELETE FROM ${tableName} WHERE ${field.name} = #{val}
	</delete>

	<select id="getBy${field.javaGetterName}" resultMap="poMap">
		SELECT <include refid="tableCol"/> FROM ${tableName} WHERE ${field.name} = #{val} limit 1
	</select>

	<update id="updateBy${field.javaGetterName}">
		<if test="val != null and val.${field.javaFieldName} !=null">
			UPDATE ${tableName} t SET
			#foreach ($f1 in $fields)
			t.${f1.name} = #{val.${f1.javaFieldName}}
			#end
			WHERE ${field.name} = #{val.${field.javaFieldName}}
		</if>
	</update>
	#end
	#end

	<select id="getOne" parameterType="${pkgNamePo}.${poName}" resultMap="poMap" >
		SELECT <include refid="tableCol"/> FROM ${tableName}
		<include refid="where"/> LIMIT 1
	</select>

	<select id="getMany" parameterType="${pkgNamePo}.${poName}" resultMap="poMap">
		SELECT <include refid="tableCol"/> FROM ${tableName}
		<include refid="where"/>
	</select>

</mapper>