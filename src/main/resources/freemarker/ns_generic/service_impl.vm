package ${pkgNameServiceImpl};

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import java.util.List;
import java.util.ArrayList;
import ${pkgNameVo}.${voName}InVo;
import ${pkgNameVo}.${voName}OutVo;
import ${pkgNamePo}.${poName};
import ${pkgNameMapper}.${mapperName};

@Service
public class ${serviceImplName}{

    @Autowired
    private ${mapperName} ${fieldMapperName};

    public List<${voName}OutVo> getMany(${voName}InVo in){
        final ${poName} query = new ${poName}();
        #foreach ($field in $fields)
        query.set${field.javaGetterName}(in.get${field.javaGetterName}());
        #end

        List<${poName}> many = ${fieldMapperName}.getMany(query);

        List<${voName}OutVo> ret = new ArrayList<>();

        for(OauthClientsPo item : many){
            OauthClientsOutVo out = new OauthClientsOutVo();
            #foreach ($field in $fields)
            out.set${field.javaGetterName}(item.get${field.javaGetterName}());
            #end
            ret.add(out);
        }
        return ret;
    }

    public String saveOrUpdate(${voName}InVo in) {

        final ${poName} po = new ${poName}();

        #foreach ($field in $fields)
        po.set${field.javaGetterName}(in.get${field.javaGetterName}());
        #end

        return ${fieldMapperName}.insertOrUpdate(po)+"";
    }

    #foreach ($field in $fields)
    #if(${field.primary})
    public ${poName} getBy${field.javaGetterName}(${field.javaType} ${field.javaFieldName}) {
        return ${fieldMapperName}.getBy${field.javaGetterName}(${field.javaFieldName});
    }

    public int removeBy${field.javaGetterName}(${field.javaType} ${field.javaFieldName}) {
        return ${fieldMapperName}.removeBy${field.javaGetterName}(${field.javaFieldName});
    }
    #end
    #end



}